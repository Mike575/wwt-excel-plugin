<Window x:Class="Microsoft.Research.Wwt.Excel.Addin.UpdateWizard"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ResourceString="clr-namespace:Microsoft.Research.Wwt.Excel.Addin.Properties" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
        x:Name="Window"
        xmlns:local="clr-namespace:Microsoft.Research.Wwt.Excel.Addin"
        xmlns:common="clr-namespace:Microsoft.Research.Wwt.Excel.Common;assembly=Microsoft.Research.Wwt.Excel.Common"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        WindowStartupLocation="CenterOwner" 
        Title="{x:Static ResourceString:Resources.UpdateWizardText}" 
        WindowStyle="ToolWindow" Width="400" Height="450" MinHeight="100" MinWidth="350" Background="{DynamicResource WindowbackgroundBrush}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Style/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ResourceString:Resources x:Key="ResourceKeyStrings"></ResourceString:Resources>
            <BooleanToVisibilityConverter x:Key="VisibilityConverter"></BooleanToVisibilityConverter>
            <local:DoubleToStringConverter x:Key="doubleConverter"></local:DoubleToStringConverter>
            <Style x:Key="getViewpointlableStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping" Value="NoWrap"/>
                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Foreground" Value="#FF002144"/>
                <Setter Property="Margin" Value="10,2,10,2"/>
                <Setter Property="MinWidth" Value="50"/>
            </Style>

            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ODPColorPallete">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="common:ColorPallete" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ODPAltitudeStyle">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="common:AltitudeStyle" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ODPColorScheme">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="common:ColorScheme" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

        </ResourceDictionary>
    </Window.Resources>

    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="5"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="45"/>
        </Grid.RowDefinitions>
        <Border Grid.Row="1" BorderThickness="1" Background="{DynamicResource WhitBrush}" Margin="0,5,0,0" BorderBrush="{DynamicResource LightgrayBorderBrush}" ClipToBounds="True" UseLayoutRounding="True">
            <ScrollViewer>
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Cell Size " Style="{DynamicResource getViewpointlableStyle}" Width="125" />
                    </StackPanel>

                    <StackPanel Margin="25,0,0,0" Orientation="Horizontal">
                        <TextBlock  Text="Longitude" Style="{DynamicResource getViewpointlableStyle}" Width="100"  />
                        <Rectangle Width="1" Fill="#FFDADADA"/>
                        <TextBox  Text="{Binding Input.DeltaLongitude,Mode=TwoWay,Converter={StaticResource doubleConverter}}"  Width="100" Margin="5,5,25,5"/>
                    </StackPanel>

                    <StackPanel Margin="25,0,0,0" Orientation="Horizontal">
                        <TextBlock  Text="Latitude" Style="{DynamicResource getViewpointlableStyle}" Width="100"  />
                        <Rectangle Width="1" Fill="#FFDADADA"/>
                        <TextBox  Text="{Binding Input.DeltaLatitude,Mode=TwoWay,Converter={StaticResource doubleConverter}}"  Width="100" Margin="5"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Color" Style="{DynamicResource getViewpointlableStyle}" Width="125" />
                    </StackPanel>

                    <StackPanel Margin="25,0,0,0" Orientation="Horizontal">
                        <TextBlock  Text="Color Scheme" Style="{DynamicResource getViewpointlableStyle}" Width="100"  />
                        <Rectangle Width="1" Fill="#FFDADADA"/>
                        <ComboBox x:Name="cmbColorScheme" SelectedItem="{Binding Input.ColorScheme}" 
                              ItemsSource="{Binding Source={StaticResource ODPColorScheme}}" Width="100" Margin="5"/>
                    </StackPanel>

                    <StackPanel Margin="25,0,0,0" Orientation="Horizontal"  Visibility="{Binding Path=Input.ShowRegularScheme, Mode=TwoWay, Converter={StaticResource VisibilityConverter}}">
                        <TextBlock  Text="Color Column" Style="{DynamicResource getViewpointlableStyle}" Width="100"  />
                        <Rectangle Width="1" Fill="#FFDADADA"/>
                        <ComboBox x:Name="cmbColorColumn" SelectedItem="{Binding Input.ColorColumn}" 
                              ItemsSource="{Binding ColumnHeaders}" Width="100" Margin="5"/>
                    </StackPanel>

                    <StackPanel Margin="25,0,0,0" Orientation="Horizontal" Visibility="{Binding Path=Input.ShowRegularScheme, Mode=TwoWay, Converter={StaticResource VisibilityConverter}}">
                        <TextBlock Text="Color Pallete" Style="{DynamicResource getViewpointlableStyle}" Width="100"  />
                        <Rectangle Width="1" Fill="#FFDADADA"/>
                        <ComboBox x:Name="cmbColorPallete" SelectedItem="{Binding Input.ColorPalette}" 
                              ItemsSource="{Binding Source={StaticResource ODPColorPallete}}" Width="100" Margin="5"/>
                    </StackPanel>

                    <StackPanel Margin="25,0,0,0" Orientation="Horizontal" Visibility="{Binding Path=Input.ShowDataScheme, Mode=TwoWay, Converter={StaticResource VisibilityConverter}}">
                        <TextBlock  Text="R Column" Style="{DynamicResource getViewpointlableStyle}" Width="100"  />
                        <Rectangle Width="1" Fill="#FFDADADA"/>
                        <ComboBox x:Name="cmbRColumn" SelectedItem="{Binding Input.RColumn}" 
                              ItemsSource="{Binding ColumnHeaders}" Width="100" Margin="5"/>
                    </StackPanel>

                    <StackPanel Margin="25,0,0,0" Orientation="Horizontal" Visibility="{Binding Path=Input.ShowDataScheme, Mode=TwoWay, Converter={StaticResource VisibilityConverter}}">
                        <TextBlock  Text="G Column" Style="{DynamicResource getViewpointlableStyle}" Width="100"  />
                        <Rectangle Width="1" Fill="#FFDADADA"/>
                        <ComboBox x:Name="cmbGColumn" SelectedItem="{Binding Input.GColumn}" 
                              ItemsSource="{Binding ColumnHeaders}" Width="100" Margin="5"/>
                    </StackPanel>

                    <StackPanel Margin="25,0,0,0" Orientation="Horizontal" Visibility="{Binding Path=Input.ShowDataScheme, Mode=TwoWay, Converter={StaticResource VisibilityConverter}}">
                        <TextBlock  Text="B Column" Style="{DynamicResource getViewpointlableStyle}" Width="100"  />
                        <Rectangle Width="1" Fill="#FFDADADA"/>
                        <ComboBox x:Name="cmbBColumn" SelectedItem="{Binding Input.BColumn}" 
                              ItemsSource="{Binding ColumnHeaders}" Width="100" Margin="5"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Altitude" Style="{DynamicResource getViewpointlableStyle}" Width="125" />
                    </StackPanel>

                    <StackPanel Margin="25,0,0,0" Orientation="Horizontal">
                        <TextBlock  Text="Altitude Column" Style="{DynamicResource getViewpointlableStyle}" Width="100"  />
                        <Rectangle Width="1" Fill="#FFDADADA"/>
                        <ComboBox x:Name="cmbAltColumn" SelectedItem="{Binding Input.AltitudeColumn}" 
                              ItemsSource="{Binding ColumnHeaders}" Width="100" Margin="5"/>
                    </StackPanel>

                    <StackPanel Margin="25,0,0,0" Orientation="Horizontal">
                        <TextBlock  Text="Altitude Style" Style="{DynamicResource getViewpointlableStyle}"  Width="100" />
                        <Rectangle Width="1" Fill="#FFDADADA"/>
                        <ComboBox x:Name="cmbAltType" SelectedItem="{Binding Input.AltitudeSytle}" 
                              ItemsSource="{Binding Source={StaticResource ODPAltitudeStyle}}" Width="100" Margin="5"/>
                    </StackPanel>

                    <StackPanel Margin="25,0,0,0" Orientation="Horizontal" Visibility="{Binding Path=Input.ShowAltitudeConstant, Mode=TwoWay, Converter={StaticResource VisibilityConverter}}">
                        <TextBlock  Text="Constant" Style="{DynamicResource getViewpointlableStyle}" Width="100"  />
                        <Rectangle Width="1" Fill="#FFDADADA"/>
                        <TextBox  Text="{Binding Input.AltitudeConstant,Mode=TwoWay,Converter={StaticResource doubleConverter}}"  Width="100" Margin="5,5,5,5"/>
                    </StackPanel>

                    <StackPanel Margin="25,0,0,0" Orientation="Horizontal" Visibility="{Binding Path=Input.ShowAltitudeLinear, Mode=TwoWay, Converter={StaticResource VisibilityConverter}}">
                        <TextBlock  Text="Linear" Style="{DynamicResource getViewpointlableStyle}" Width="100"  />
                        <Rectangle Width="1" Fill="#FFDADADA"/>
                        <TextBox  Text="{Binding Input.AlphaConstant,Mode=TwoWay,Converter={StaticResource doubleConverter}}"  Width="40" Margin="5"/>
                        <TextBlock Text="+ AltValue * " VerticalAlignment="Center" />
                        <TextBox  Text="{Binding Input.BetaConstant,Mode=TwoWay,Converter={StaticResource doubleConverter}}"  Width="40" Margin="5"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Bounding Coordinates" Style="{DynamicResource getViewpointlableStyle}" Width="125" />
                        <CheckBox IsChecked="{Binding Input.FilterBetweenBoundaries}" VerticalAlignment="Center"/>
                    </StackPanel>

                    <StackPanel Margin="25,0,0,0" Orientation="Horizontal" IsEnabled="{Binding Input.FilterBetweenBoundaries}">
                        <TextBlock  Text="Minimum Longitude" Style="{DynamicResource getViewpointlableStyle}" Width="100"  />
                        <Rectangle Width="1" Fill="#FFDADADA"/>
                        <TextBox  Text="{Binding Input.MinLongitude,Mode=TwoWay,Converter={StaticResource doubleConverter}}"  Width="100" Margin="5,5,25,5"/>
                    </StackPanel>

                    <StackPanel Margin="25,0,0,0" Orientation="Horizontal" IsEnabled="{Binding Input.FilterBetweenBoundaries}">
                        <TextBlock  Text="Minimum Latitude" Style="{DynamicResource getViewpointlableStyle}" Width="100"  />
                        <Rectangle Width="1" Fill="#FFDADADA"/>
                        <TextBox  Text="{Binding Input.MinLatitude,Mode=TwoWay,Converter={StaticResource doubleConverter}}"  Width="100" Margin="5"/>
                    </StackPanel>

                    <StackPanel Margin="25,0,0,0" Orientation="Horizontal" IsEnabled="{Binding Input.FilterBetweenBoundaries}">
                        <TextBlock  Text="Maximum Longitude" Style="{DynamicResource getViewpointlableStyle}" Width="100"  />
                        <Rectangle Width="1" Fill="#FFDADADA"/>
                        <TextBox  Text="{Binding Input.MaxLongitude,Mode=TwoWay,Converter={StaticResource doubleConverter}}"  Width="100" Margin="5,5,25,5"/>
                    </StackPanel>

                    <StackPanel Margin="25,0,0,0" Orientation="Horizontal" IsEnabled="{Binding Input.FilterBetweenBoundaries}">
                        <TextBlock  Text="Maximum Latitude" Style="{DynamicResource getViewpointlableStyle}" Width="100"  />
                        <Rectangle Width="1" Fill="#FFDADADA"/>
                        <TextBox  Text="{Binding Input.MaxLatitude,Mode=TwoWay,Converter={StaticResource doubleConverter}}"  Width="100" Margin="5"/>
                    </StackPanel>

                </StackPanel>

            </ScrollViewer>
        </Border>
        <StackPanel  HorizontalAlignment="Right" Grid.Row="2" VerticalAlignment="Top" Orientation="Horizontal" Margin="{DynamicResource ButtonContainerMargin}">
            <Button x:Name="fetchButton" Content="{Binding Path=UpdateButtonLabel, Source={StaticResource ResourceKeyStrings}}" Width="75" IsEnabled="True" IsDefault="True" IsCancel="False">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click" SourceName="fetchButton">
                        <i:InvokeCommandAction x:Name="fetchClimate" 
                                                Command="{Binding UpdateCommand}" 
                                                CommandParameter="{Binding SelectedItem,ElementName=fetchButton}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button x:Name="cancelButton" Content="{Binding Path=CancelLabel, Source={StaticResource ResourceKeyStrings}}" Width="75" Margin="8,0,0,0" IsCancel="True">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click" SourceName="cancelButton">
                        <i:InvokeCommandAction x:Name="cancel" Command="{Binding CancelCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </StackPanel>
    </Grid>

</Window>

